import { Button, VerticalBox, HorizontalBox, LineEdit, ScrollView } from "std-widgets.slint";

global Palette {
    out property <color> primary: #51565F;
    out property <color> background: #222831;
    out property <color> surface: #31363F;
    out property <color> text: #EEEEEE;
    out property <color> text-secondary: #ABABAB;
    out property <color> border;

    out property <color> primary-hightlight: #71767F;
    out property <color> text-highlight: #FFFFFF;
    out property <color> text-secondary-highlight: #DDDDDD;
}

global Size {
    out property <length> rep-counter-height: 50px;
    out property <length> workout-font-size: 20px;
    out property <length> input-font-size: 12px;
    out property <length> increment-button-font-size: 18px;
}

enum Sign {
    positive,
    negative
}

component CaliButton inherits TouchArea {
    in property <string> button-text;
    in property <length> border-radius;

    i-container := Rectangle {
        border-radius: border-radius;
        background: Palette.primary;

        HorizontalLayout {
            i-text := Text {
                text: button-text;
                vertical-alignment: center;
                horizontal-alignment: center;
                color: Palette.text-secondary;
                font-size: Size.increment-button-font-size;
            }
        }
    }

    states [
        pressed when root.pressed: {
            i-container.background: Palette.primary-hightlight;
            i-text.color: Palette.text-secondary-highlight;
        }
    ]
}

component IncrementButton inherits CaliButton {
    in property <int> increment;
    in property <length> radius;

    width: radius * 2;
    height: radius * 2;

    border-radius: self.width / 2;

    states [
        positive when root.increment > 0: {
            button-text: "+" + increment;
        }
        negative when root.increment < 0: {
            button-text: increment;
        }
    ]
}

struct CaliData {
    name: string,
    reps-today: int,
}

component CaliCounter inherits Rectangle {
    callback add-reps(int);

    in property <string> workout-name;
    in property <int> rep-count;

    height: Size.rep-counter-height;
    background: Palette.surface;
    border-radius: 5px;

    i-container := HorizontalBox {
        padding: 5px;
        padding-left: 10px;
        padding-right: 10px;
        alignment: space-between;

        Text {
            width: 100px;
            text: workout-name;
            color: Palette.text;
            font-size: Size.workout-font-size;
            vertical-alignment: center;
        }

        Text {
            width: 50px;
            text: rep-count;
            color: Palette.text;
            font-size: Size.workout-font-size;
            vertical-alignment: center;
        }

        // LineEdit {
        //     width: 50px;
        //     height: 20px;
        //     placeholder-text: "Enter reps";
        //     font-size: Size.input-font-size;
        // }

        i-buttons := HorizontalBox {
            private property <[int]> rep-increments: [1, 3, 5, 10];

            padding: 0px;
            height: parent.height;

            // IncrementButton {
            //     property <Sign> sign: Sign.positive;
            //     clicked => {
            //         self.sign = sign == Sign.positive ? Sign.negative : Sign.positive;
            //         // parent.rep-increments = self.sign == Sign.positive ? [1, 3, 5, 10] : [-1, -3, -5, -10];
            //         self.button-text = sign == Sign.positive ? "+" : "-";
            //     }
            // }

            for increment in rep-increments: IncrementButton {
                increment: increment;
                radius: Size.rep-counter-height / 2 - 5px;
                clicked => {
                    root.add-reps(increment);
                }
            }
        }
    }
}

export component AppWindow inherits Window {
    callback add-cali(CaliData);

    in property <[CaliData]> cali_counters: [
        { name: "Pushups" },
        { name: "Situps" },
        { name: "Pullups" },
    ];

    min-width: 500px;
    min-height: 400px;

    background: Palette.background;

    VerticalBox {
        alignment: space-between;
        padding: 0px;

        ScrollView {
            height: 400px;
            VerticalBox {
                for data in cali_counters: CaliCounter {
                    workout-name: data.name;
                }
            }
        }

        VerticalBox {
            padding: 10px;
            CaliButton {
                button-text: "Add workout";
                border-radius: 5px;

                height: Size.rep-counter-height;

                // todo uhhh how get name lol
                clicked => {
                    root.add-cali({ name: "" });
                }
            }
        }
    }
}

// TODO
// text input for granular rep adding/removing
// remove reps button
// remove workout button

// to become extra rusty, we can persist rep counts on a separate thread
// then we truly will be fearless
